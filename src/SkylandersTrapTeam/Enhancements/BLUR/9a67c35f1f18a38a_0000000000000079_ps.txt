#version 460

layout(set = 1, binding = 1, std140) uniform ufBlock
{
    ivec4 uf_remappedPS[5];
    vec4 uf_fragCoordScale;
} _244;

layout(set = 1, binding = 0) uniform sampler2D textureUnitPS0;

layout(location = 0) in vec4 passParameterSem133;
layout(location = 1) in vec4 passParameterSem134;
layout(location = 0) out vec4 passPixelColor0;

float mul_nonIEEE(float a, float b)
{
    if ((a == 0.0) || (b == 0.0))
    {
        return 0.0;
    }
    return a * b;
}

void main()
{
    ivec4 R0i = ivec4(0);
    ivec4 R1i = ivec4(0);
    ivec4 R2i = ivec4(0);
    ivec4 R3i = ivec4(0);
    ivec4 R4i = ivec4(0);
    ivec4 R5i = ivec4(0);
    ivec4 R6i = ivec4(0);
    ivec4 R123i = ivec4(0);
    ivec4 R124i = ivec4(0);
    ivec4 R125i = ivec4(0);
    ivec4 R126i = ivec4(0);
    ivec4 R127i = ivec4(0);
    ivec4 PV0i = ivec4(0);
    ivec4 PV1i = ivec4(0);
    int PS0i = 0;
    int PS1i = 0;
    ivec4 tempi = ivec4(0);
    ivec4 ARi = ivec4(0);
    bool predResult = true;
    bool activeMaskStack[2];
    activeMaskStack[0] = false;
    bool activeMaskStackC[3];
    activeMaskStackC[0] = false;
    activeMaskStackC[1] = false;
    activeMaskStack[0] = true;
    activeMaskStackC[0] = true;
    activeMaskStackC[1] = true;
    R0i = floatBitsToInt(passParameterSem133);
    R1i = floatBitsToInt(passParameterSem134);
    if (activeMaskStackC[1] == true)
    {
        R2i.x = floatBitsToInt(textureLod(textureUnitPS0, intBitsToFloat(R1i.zy), 0.0).w);
        R4i.x = floatBitsToInt(textureLod(textureUnitPS0, intBitsToFloat(R1i.xy), 0.0).w);
        R3i.x = floatBitsToInt(textureLod(textureUnitPS0, intBitsToFloat(R1i.xw), 0.0).w);
        R1i.x = floatBitsToInt(textureLod(textureUnitPS0, intBitsToFloat(R1i.zw), 0.0).w);
        R5i = floatBitsToInt(textureLod(textureUnitPS0, intBitsToFloat(R0i.xy), 0.0));
    }
    int backupReg0i;
    if (activeMaskStackC[1] == true)
    {
        int _303;
        if (PV1i.x == 0)
        {
            _303 = 0;
        }
        else
        {
            _303 = R5i.x;
        }
        R2i.x = _303;
        R1i.y = (PV1i.x == 0) ? 0 : 1065353216;
        int _320;
        if (PV1i.x == 0)
        {
            _320 = 0;
        }
        else
        {
            _320 = R5i.z;
        }
        R2i.z = _320;
        int _331;
        if (PV1i.x == 0)
        {
            _331 = 0;
        }
        else
        {
            _331 = R5i.w;
        }
        R2i.w = _331;
        int _342;
        if (PV1i.x == 0)
        {
            _342 = 0;
        }
        else
        {
            _342 = R5i.y;
        }
        R2i.y = _342;
        PS0i = R2i.y;
        predResult = R1i.y == 0;
        activeMaskStack[1] = predResult;
        bool _358 = predResult == true;
        bool _364;
        if (_358)
        {
            _364 = activeMaskStackC[1] == true;
        }
        else
        {
            _364 = _358;
        }
        activeMaskStackC[2] = _364;
    }
    else
    {
        activeMaskStack[1] = false;
        activeMaskStackC[2] = false;
    }
    if (activeMaskStackC[2] == true)
    {
        R127i.x = floatBitsToInt(intBitsToFloat(R0i.w) + intBitsToFloat(R1i.x));
        PV0i.x = R127i.x;
        R127i.y = floatBitsToInt(intBitsToFloat(R0i.w) + (-intBitsToFloat(R1i.x)));
        PV0i.y = R127i.y;
        PV0i.z = 0;
        PV0i.x = floatBitsToInt(max(intBitsToFloat(PV1i.z), -intBitsToFloat(PV1i.z)));
        float param_2 = intBitsToFloat(PV1i.z);
        float param_3 = intBitsToFloat(_244.uf_remappedPS[2].z);
        PV0i.y = floatBitsToInt(mul_nonIEEE(param_2, param_3));
        float param_4 = intBitsToFloat(PV1i.y);
        float param_5 = intBitsToFloat(_244.uf_remappedPS[2].w);
        PV0i.z = floatBitsToInt(mul_nonIEEE(param_4, param_5));
        PV0i.w = floatBitsToInt(max(intBitsToFloat(PV1i.y), -intBitsToFloat(PV1i.y)));
        R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + (-intBitsToFloat(PV0i.y)));
        R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + (-intBitsToFloat(PV0i.z)));
        PV1i.z = floatBitsToInt(min(intBitsToFloat(PV0i.x), intBitsToFloat(PV0i.w)));
        R2i.w = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(PV0i.y));
        R2i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(PV0i.z));
        PS1i = R2i.y;
        int backupReg1i;
        ivec3 _514 = floatBitsToInt(vec3(intBitsToFloat(backupReg0i), intBitsToFloat(backupReg1i), intBitsToFloat(backupReg0i)) + vec3(-intBitsToFloat(PV1i.w), -intBitsToFloat(PV1i.z), intBitsToFloat(PV1i.w)));
        R0i.x = _514.x;
        R0i.y = _514.y;
        R0i.z = _514.z;
        R0i.w = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(PV1i.z));
    }
    if (activeMaskStackC[2] == true)
    {
        R3i = floatBitsToInt(textureLod(textureUnitPS0, intBitsToFloat(R0i.xy), 0.0));
        R0i = floatBitsToInt(textureLod(textureUnitPS0, intBitsToFloat(R0i.zw), 0.0));
        R1i = floatBitsToInt(textureLod(textureUnitPS0, intBitsToFloat(R1i.xy), 0.0));
        R2i = floatBitsToInt(textureLod(textureUnitPS0, intBitsToFloat(R2i.wy), 0.0));
    }
    if (activeMaskStackC[2] == true)
    {
    }
    bool _565 = activeMaskStack[0] == true;
    bool _571;
    if (_565)
    {
        _571 = activeMaskStackC[0] == true;
    }
    else
    {
        _571 = _565;
    }
    activeMaskStackC[1] = _571;
    passPixelColor0 = vec4(intBitsToFloat(R2i.x), intBitsToFloat(R2i.y), intBitsToFloat(R2i.z), intBitsToFloat(R2i.w));
}

